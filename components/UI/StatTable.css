.stat-table {
  width: auto;
  margin-left: auto;
  margin-right: auto;
  border-collapse: separate;
  border-spacing: 0;
  font-size: 0.8125rem;
  opacity: 1;
  table-layout: fixed;
}

.stat-table > thead {
  position: sticky;
  top: 58px;
}

.stat-table > :not(caption) > * > * {
  border-width: 0 1px 1px 0;
  padding: 0.125rem;
}

.stat-table > :not(caption) > * > th {
  border-top-width: 1px;
  border-bottom-width: 2px;
}

.stat-table > :not(caption) > * > *:first-child {
  border-left-width: 1px;
}

.stat-table > thead > tr:first-child {
  text-align: center;
}

.stat-table-wrapper.pending,
:not(.stat-table-wrapper.pending) > .stat-table.pending {
  opacity: 0.5;
  transition: opacity 0.2s 0.2s linear;
}

.stat-table > :not(caption) > * > .fsm {
  font-size: 0.75rem;
}

.stat-table > tbody > tr.separator > td {
  border-top: double var(--bs-dark);
}

[data-bs-theme="dark"] .stat-table > tbody > tr.separator > td {
  border-top: double var(--bs-light);
}

.stat-table .skill-normal {
  color: var(--bs-gray-600);
}

.stat-table .annotations {
  font-size: 0.75rem;
  color: var(--bs-red);
  display: flex;
  flex-wrap: wrap;
  column-gap: 0.5em;
}

.stat-table .unhealable {
  text-decoration-line: underline;
}

.stat-table .critical {
  font-weight: bold;
}

.stat-table div.species {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  column-gap: 0.5em;
}

.stat-table > caption {
  font-size: 1rem;
}

@media (max-width: 1199.98px) {
  .stat-table {
    display: block;
    overflow: auto;
    max-height: calc(100vh - 58px);
    padding-right: 12px;
    padding-bottom: 15vh;
  }

  .stat-table > thead {
    top: 0;
  }

  .stat-table > :not(caption) > * > * {
    padding: 0.05rem;
  }
}

.stat-table .buff-require {
  color: var(--bs-red);
}

.stat-table .header-alias {
  display: inline;
}

.stat-table .header-name {
  display: none;
}

@media (min-height: 600px) {
  .stat-table .header-alias {
    display: none;
  }

  .stat-table .header-name {
    display: inline;
  }
}

.stat-table .supplement-bold {
  color: var(--bs-red);
}

.stat-table .table-c-red-300 .supplement-bold {
  color: color-mix(
    in srgb,
    var(--bs-red) 75%,
    var(
      --bs-table-color-state,
      var(--bs-table-color-type, var(--bs-table-color))
    )
  );
}

[data-bs-theme="dark"] .stat-table .supplement-bold {
  color: var(--bs-yellow);
}

th.hp,
th.attack,
th.defense,
th.resist,
th.physicalLimit,
th.magicalLimit,
th.dps0,
th.dps1,
th.dps2,
th.dps3,
th.dps4,
th.dps5,
th.buffHp,
th.buffAttack,
th.buffDefense,
th.buffResist,
th.buffCriChance,
th.buffCriChanceLimit {
  width: 2.7rem;
}

th.conditions {
  width: 2.8rem;
}

th.target {
  width: 2.8rem;
  min-width: 2.1rem;
}

th.rarity,
th.cost {
  width: 1.4rem;
}

th.attackSpeed,
th.delay,
th.moveCost {
  width: 1.55rem;
}

th.block {
  width: 1.8rem;
}

th.interval {
  width: 2rem;
}

th.unitId,
th.situationId,
th.element,
th.range,
th.moveSpeed,
th.placement {
  width: 2rem;
}

th.initialTime,
th.duration,
th.cooldown,
th.damageType,
th.buffCost {
  width: 2.4rem;
}

th.moveType {
  width: 3.2rem;
}

th.species {
  width: 4.1rem;
}

th.className {
  width: 4.9rem;
}

th.unitShortName {
  width: 5.3rem;
  min-width: 3.3rem;
}

th.skillName,
th.exSkill1,
th.exSkill2 {
  width: 8.9rem;
  min-width: 5rem;
}

th.unitName {
  width: 12.2em;
}

th.supplements {
  width: 11rem;
  min-width: 7.7rem;
}

th.buffTarget {
  width: 4.1rem;
}

th.buffSupplements {
  width: 12.5rem;
}

th.inBattleBuffSupplements {
  width: 12.5rem;
}

th.buffRange,
th.buffAttackSpeedAgility,
th.buffFieldChange,
th.buffFieldAdd {
  width: 2.4rem;
}

th.buffHpMul,
th.buffAttackMul,
th.buffDefenseMul,
th.buffResistMul,
th.buffPhysicalDamageCut,
th.buffMagicalDamageCut,
th.buffDamageFactor,
th.buffDamageDebuff,
th.buffPhysicalDamageDebuff,
th.buffMagicalDamageDebuff,
th.buffAttackSpeed,
th.buffDelayMul,
th.buffPhysicalEvasion,
th.buffMagicalEvasion,
th.buffMoveSpeedAdd,
th.buffMoveSpeedMul,
th.buffRedeployTimeCut,
th.buffWithdrawCostReturn,
th.buffFieldFactor,
th.buffPoisonImmune,
th.buffBlindImmune,
th.buffStanImmune,
th.buffPetrifyImmune,
th.buffFreezeImmune,
th.buffBurnImmune,
th.buffWeatherChange {
  width: 2.7rem;
}

th.buffCriChanceAdd,
th.buffCriDamageAdd {
  width: 3rem;
}
